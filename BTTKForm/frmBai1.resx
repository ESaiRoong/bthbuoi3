<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        REQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREH//Z
</value>
  </data>
</root>